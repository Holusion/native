name: Holusion Companion

on:
  push:
    paths: [ 'HolusionCompanion/**', ".github/workflows/companion.yml" ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: HolusionCompanion
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      ### restore caches
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('HolusionCompanion/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install build dependencies
        run: |
          npm ci --legacy-peer-deps
      - name: Run tests
        run: |
          npm test
  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: macos-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      ### restore caches
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: CocoaPods cache
        uses: actions/cache@v3
        with:
          path: HolusionCompanion/ios/Pods
          key: ${{ runner.os }}-HolusionCompanion-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-HolusionCompanion-pods-
      - name: npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      ### install build dependencies
      - name: Install react native CLI
        run: |
          sudo chown -R 501:20 "$HOME/.npm"
          npm install -g react-native-cli
      - name: Install fastlane
        run: |
          sudo gem install fastlane
          
      - name: Set environment variables from project settings
        run: |
          echo "SCHEME=HolusionCompanion" >> $GITHUB_ENV
          echo "PRODUCT_NAME=HolusionCompanion" >> $GITHUB_ENV

      - name: Import signing certificate
        env:
          # dans xCode, préférences > certificats > exporter
          # choisir un MDP sécurisé
          #Puis dans un terminal : 
          #   base64 moncertificat.p12 | pbcopy
          # Mettre à jour aussi le "secrets.PROVISIONING_PROFILE_DATA"
          # https://developer.apple.com/account/resources/profiles/list
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
        run: |
          security create-keychain -p "" build.keychain
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings
          security import <(echo $SIGNING_CERTIFICATE_P12_DATA | base64 --decode) \
                -f pkcs12 \
                -k build.keychain \
                -P $SIGNING_CERTIFICATE_PASSWORD \
                -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Import provisioning profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$PROVISIONING_PROFILE_DATA" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
      - name: Install build dependencies
        run: |
          cd HolusionCompanion
          npm ci --legacy-peer-deps
          (cd ios && pod install --verbose)
      - name: Build JS package
        run: |
          cd HolusionCompanion
          npm run build
      - name: Build iOS app
        env:
          BUILD_NUM: ${{ github.run_number }}
        run: |
          echo "Build number : $BUILD_NUM"
          cd HolusionCompanion/ios
          fastlane beta
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build.log
          path: ~/Library/Logs/gym/*.log

      - name: Upload app to App Store Connect
        env:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: |
          cd HolusionCompanion/ios
          xcrun altool --upload-app -t ios -f "$PRODUCT_NAME.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
